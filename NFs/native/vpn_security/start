#!/bin/bash

#Author: Sergio Nuccio
#Date: November 12th 2015
#Brief: start script for a VPN network function that creates an IPsec tunnel

#command line: 
#	sudo ./start $1 $2 $3 $4 $5

#dependencies: ipsec-tools, iptables

#$1 LSI ID								(e.g., 2)
#$2 NF name								(e.g., VPNsecurity)
#$3 number_of_ports							(it is supposed to be 2 for this NF)
#$4 and $5 names of port1 and port2 respectively			(e.g., vEth0 vEth1)

if (( $EUID != 0 )) 
then
    echo "[nativeNF_vpnsec_start] This script must be executed with ROOT privileges"
    exit 0
fi

temp_dir="$1_$1_$2_tmp_$2"

#enable ipv4 forwarding
sysctl -w net.ipv4.ip_forward=1

#set SAD and SPD 
setkey -f $temp_dir/setkey.conf

table=t_$1_$2
table_entry=`echo -e $1 "\t" $table`

#create table for policy-based routing
#echo $table_entry >> /etc/iproute2/rt_tables

#note: policy based routing is not needed working with network namespaces

#set ip address of the user next hop
ifconfig $4 10.0.1.1/24 up
ip link set $4 promisc on
ip link set $4 arp on

#set ip address of the ipsec end point
ifconfig $5 x.x.x.x up
ip link set $4 promisc on
ip link set $4 arp on

#set default gateway for outgoing traffic
ip route add default via z.z.z.z dev $5 #table $table

#from the VPN network to the local host
#ip route add 10.0.2.0/24 via 10.0.1.1 dev $4 table $table

#redirect traffic generated by IPsec
#iptables -t mangle -A OUTPUT -p 50 -m esp --espspi 0x1001 -j MARK --set-mark 0x$(echo "obase=16; $1" | bc)ecec #mark outgoing traffic (which enters into the tunnel)
#ip rule add fwmark 0x$(echo "obase=16; $1" | bc)ecec table $table
#ip rule add from 10.0.2.0/24 to 10.0.1.0/24 table $table

echo "[nativeNF_vpnsec_start] script executed"

exit 0



